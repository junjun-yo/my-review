axios配置详解 
//常见请求实例配置项
{
baseURL： ‘’， //基础URL
timeout：1000， //请求延时时间
headers {'X-Requested-With': 'XMLHttpRequest'}, //自定义请求头内容
responseType: 'json', //请求数据类型包括 'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'
params: {}, //无论请求为何种类型，在params中的属性都会以key=value的格式在urlzhong拼接
transformRequest: [function(data){
return data
}], // 只适用于 POST,PUT,PATCH，transformRequest` 允许在向服务器发送前，修改请求数据。后面数组中的函数必须返回一个字符串，或 ArrayBuffer，或 Stream
transformResponse: [function(data){
return data
}], //transformResponse` 在传递给 then/catch 前，允许修改响应数据
validateStatus: function(status){
　　return status < 400 //状态码小于400时均为成功（返回true）
}, //validateStatus` 定义对于给定的HTTP 响应状态码是 resolve 或 reject promise 。如果 `validateStatus` 返回 `true` (或者设置为 `null` 或 `undefined`)，promise 将被 resolve; 否则，promise 将被 rejecte
cancelToken //取消请求，下文详细说明
}
eg（在main.js中配置）：
//其他页面在使用axios的时候直接 this.$axios就可以了
0.Vue.prototype.$axios = axios
1.anxios.defaults.baseURL = "接口地址";
2.axios.defaults.headers.post['Content-Type'] = 'application/json'

// 请求拦截（配置发送请求的信息）
axios.interceptors.request.use(function (config) {
// 处理请求之前的配置
return config
}, function (error) {
// 请求失败的处理
return Promise.reject(error)
})
// 响应拦截（配置请求回来的信息）
axios.interceptors.response.use(function (response) {
// 处理响应数据
return response
}, function (error) {
// 处理响应失败
return Promise.reject(error)
})

