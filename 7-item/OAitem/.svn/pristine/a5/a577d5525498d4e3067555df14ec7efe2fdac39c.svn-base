<template>
  <el-row class="full">
    <el-col :span="4">
      <el-card class="full-card" shadow="never">
        <div slot="header" class="clearfix">
          <span>部门列表</span>
          <i
            class="el-icon-refresh"
            style="float: right;padding:0;font-size:20px;"
            @click="refresh"
          ></i>
        </div>
        <div style="height:100%;">
          <ztree
            @click="nodeClick"
            title="部门"
            ref="deptTree"
            url="/system/addressBook/selectSysDeptList"
          />
        </div>
      </el-card>
    </el-col>
    <el-col :span="20">
      <el-card class="full-card" shadow="never">
        <div slot="header" class="clearfix card-header">
          <span>{{parentDeptName}}：下级单位/部门</span>
          <el-link type="primary" style="float: right; " @click="addDept()">新增下级部门</el-link>
        </div>
        <div style="overflow-y:auto;">
          <el-table :data="tableDatas" :height="curFullHeight-220" border v-loading="tableLoading">
            <!-- <el-table-column label="部门名称" align="center">
              <template slot-scope="{row}">{{row.deptId|dept}}</template>
            </el-table-column>-->
            <el-table-column prop="deptName" label="中文简称" align="center"></el-table-column>
            <el-table-column prop="deptShortName" label="中文简称" align="center"></el-table-column>
            <el-table-column prop="deptShortName" label="类型" align="center">
              <template slot-scope="{row}">
                <span v-if="row.nodeType == 1">单位</span>
                <span v-if="row.nodeType == 2">部门</span>
              </template>
            </el-table-column>
            <el-table-column prop="deptSort" label="排序码" align="center"></el-table-column>
            <el-table-column label="操作" align="center">
              <template slot-scope="{row}">
                <el-link type="primary" @click="editDept(row)">编辑</el-link>
                <span v-show="row.nodeType != 2 ">
                  <el-divider direction="vertical"></el-divider>
                  <el-link type="primary" @click="updateParentDept(row)">修改父节点</el-link>
                </span>
                <el-divider direction="vertical"></el-divider>
                <el-link type="primary" @click="deleteDept(row)">删除</el-link>
              </template>
            </el-table-column>
          </el-table>
          <el-pagination
            style="float:right;margin-top:10px;"
            @size-change="sizeChange"
            @current-change="curChange"
            :current-page="page.cur"
            :page-sizes="[10, 20, 30, 40]"
            :page-size="page.size"
            layout="total, sizes, prev, pager, next, jumper"
            :total="page.total"
          ></el-pagination>
        </div>
      </el-card>
    </el-col>
  </el-row>
</template>

<script>
import deptForm from "./components/dept_form";

export default {
  data() {
    return {
      treeItem: {},
      parentDeptName: "",
      tableLoading: false,
      tableDatas: [],
      page: {
        cur: 1,
        size: 10,
        total: 100
      }
    };
  },
  methods: {
    sizeChange(value) {
      this.page.size = value;
      this.loadTableList();
    },
    curChange(value) {
      this.page.cur = value;
      this.loadTableList();
    },
    nodeClick(nodeData) {
      this.treeItem = nodeData.item;
      this.parentDeptName = this.treeItem.deptName;
      this.loadTableList();
    },
    loadTableList() {
      this.tableLoading = true;
      Ajax.post("/system/sysDept/selectDeptList", {
        parentId: this.treeItem.deptId,
        pageNumber: this.page.cur,
        pageSize: this.page.size
      }).then(res => {
        this.tableDatas = res.data;
        this.page.total = res.total || 0;
        this.tableLoading = false;
      });
    },
    refresh() {
      this.page.cur = 1;
      this.page.size = 10;
      this.$refs.deptTree.refresh();
    },
    addDept() {
      Ajax.post("/system/sysDept/getUUID", {}).then(res => {
        this.$open({
          title: "新增部门",
          component: deptForm,
          width: "500px",
          props: {
            parentId: this.treeItem.deptId,
            parentName: this.parentDeptName,
            fileId: res.data
          },
          confirm: () => {
            this.refresh();
          }
        });
      });
    },
    editDept(row) {
      this.$open({
        title: "编辑部门",
        component: deptForm,
        width: "500px",
        props: {
          deptId: row.deptId,
          parentName: this.parentDeptName,
          fileId: row.deptId
        },
        confirm: () => {
          this.refresh();
        }
      });
    },
    updateParentDept(row) {
      this.$openDeptSelect({
        allowCheckCount: 1,
        defaultCheck: row.parentId,
        confirm: data => {
          Ajax.put("/system/sysDept/updateSysDeptParentId", {
            deptId: row.deptId,
            parentId: data.id
          }).then(res => {
            this.$message.success("修改成功");
            this.refresh();
          });
        }
      });
    },
    deleteDept(item) {
      this.$confirm("是否删除?", "提示", {
        type: "warning"
      }).then(() => {
        Ajax.delete("/system/sysDept/deleteDeptInfo", {
          deptId: item.deptId
        }).then(res => {
          if (res.success) {
            this.$message.success("删除成功");
            this.refresh();
          }
        });
      });
    }
  }
};
</script>
