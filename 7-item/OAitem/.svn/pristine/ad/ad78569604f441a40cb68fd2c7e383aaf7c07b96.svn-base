<template>
  <workflow-design ref="design" v-loading="loading" v-model="jsonData" />
</template>

<script>
import workflowDesign from "@/components/WorkflowDesign/index.vue";

export default {
  props: {
    id: String,
    unitId: String,
    flowType: String,
    subTypeId: String
  },
  components: {
    workflowDesign
  },
  data() {
    return {
      formData: {},
      jsonData: {},
      loading: false
    };
  },
  methods: {
    buildSteps(bpmnJson) {
      let nodes = bpmnJson.nodeList;
      if (nodes && nodes.length > 0) {
        let steps = [];
        for (let i in nodes) {
          if (nodes[i].type == "user") {
            let step = {...nodes[i]};
            delete step["id"];
            delete step["name"];
            steps.push(step);
          }
        }
        return steps;
      }
      return [];
    },
    confirm(done, fail) {
      if (this.$refs.design.validate() == true) {
        let result = this.$refs.design.result();
        let param = {
          ...this.formData,
          ...result.bpmnJson.config,
          steps: this.buildSteps({ ...result.bpmnJson }),
          bpmnJson: JSON.stringify(result.bpmnJson),
          bpmnXml: result.bpmnXml
        };
        delete param["createDate"];
        Ajax.put("/flow/definition/save", param, "json").then(
          res => {
            this.$message({
              message: "保存成功！",
              type: "success"
            });
            done();
          },
          err => {
            fail();
          }
        );
      } else {
        fail();
      }
    },
    loadFlowInfo() {
      if (this.id) {
        this.loading = true;
        Ajax.get("/flow/definition/get", {
          id: this.id
        }).then(res => {
          this.loading = false;
          if (res.data) {
            this.formData = { ...res.data };
            const { bpmnJson } = res.data;
            if (bpmnJson) {
              let json = JSON.parse(bpmnJson);
              this.jsonData = { ...json };
            }
          }
        });
      } else {
        //初始化流程属性
        this.formData = {
          flowKey:
            "process-" +
            new Date().getTime() +
            ((Math.random() * 1000).toFixed(0) + ""),
          flowName: "流程-" + new Date().getTime(),
          flowType: this.flowType || "",
          subTypeId: this.subTypeId || "",
          createUnit: this.unitId || "",
          formId: "",
          flowIcon: "",
          documentation: "",
          approvalSort: "USER_ASC"
        };

        this.jsonData.config = JSON.parse(JSON.stringify(this.formData));
      }
    }
  },
  created() {
    this.loadFlowInfo();
  }
};
</script>

<style lang='scss' scoped>
</style>